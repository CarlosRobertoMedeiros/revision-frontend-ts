TypeScript

	SuperSet do JavaScript
	Link: https://www.typescriptlang.org/

	O que é TypeScript?
		É uma linguagem de programação que foi criada pela Microsoft, ela é um SuperSet de JavaScript

	O que é Transpilação?
		É o processo de fazer com que o código digitado seja TypeScript e que seja "Transpilado(compilação + transformação)" em JavaScript



	|--------------------------------------
	|									  |
	|					TypeScript		  |
	|									  |
	|									  |	
	|		|--------------------|		  |
	|		|			  ES6	 |		  |
	|		|					 |		  |	
	|		|		|-----|		 |		  |
	|		|		| ES5 |		 |		  |
	|		|		|-----|	     |		  |
	|		|				     |		  |
	|		---------------------		  |
	|									  |	
	|									  |
	|--------------------------------------


	ES6 = Ecma Script 2016(Inclusão de Classes Etc)
	ES5 = Padrão Simples

	Instalação do NodeJs e do NPM(Gerenciador de Pacotes Node Package Manager)
		install node  / para verificar as versções node -v
		node{Enter} Entra no Node

	Instalação do Visual Studio Code
		Link: https://code.visualstudio.com/download
	
	Instalação do TypeScript
		npm install -g typescript
		tsc -v //Verifica a versão do typescript Version 2.7.2

	Primeiro Código com TypeScript
		Exemplo: hello-world.ts
		Para Gerar um Js Através do TypeScript
			tsc hello-world.ts
		Para rodar o programa
			node hello-world.js
	
	Continuar em Fundamentos do TypeScript
		02.0 - Declaração de Variáveis
			Diferença entre var let e const No Js a partir da versão 6
			Foi criado o arquivo tsconfig.json, o qual informa a versão do es que vai ser configurado no projeto

			Para Realizar a transpilação automática
			 - Você pode selecionar "Tasks: Configure Task", provavelmente você está com uma versão mais nova.
			 - Pressionar F1 "Run Build Task" ou Atalho (CTRL+Shift+B)
			 - No Terminar ao Compilar ele mostra no Terminal em Seguida você pode executar.
			Ex. 
				Verificar o arquivo 02-Declaração de Variáveis/declaracao-de-variaveis.ts
		
		02.1 - Tipos Básicos
		02.2 - Inferência de Tipos
		02.3 - Arrays e Iterações
		02.4 - Types vs Interfaces
	
	Continuar em Orientação a Objetos do TypeScript 3.1 Classes e Objetos
		03.1 - Classes e Objetos
			Analogia    Abstração       /  Aplicabilidade Prática
					     Classe Planta  /  Objeto Casa
					     Classe Cliente /  Objeto Cliente de CPF xxx, outro CPF yyyy
		
		03.2 - Propriedades e métodos
			Propriedades de uma classe Pessoa:
				- nome
				- Cpf
				- Sexo

			Ações/métodos
				-Apresentar
				-Andar

		3.3 - Construindo sua primeira classe
			Ex.Cliente.ts
		3.4 - Exemplo de Herança
			exemplo-heranca.ts
		3.5 - Interfaces

	Outros Recursos do ES6	
		3.1 - Fat Arrow Functions
			Ex.03.1/Fat Arrow Function/arrow-function.js
		3.2 - Utilizando Template Strings
			Ex. 03.2 -Template String
		3.3 - Promisses


	Evoluindo OO Com SOLID
		https://www.youtube.com/watch?v=899Qa6sQcRc
			




Atalhos visual Studio 
	CTRL+Shift+P = Command Pallete
    F1 = Run Build Task()
	Run Build Task = (CTRL+Shift+B)
	







